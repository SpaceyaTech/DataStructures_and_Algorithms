https://leetcode.com/problems/two-sum-iv-input-is-a-bst/submissions/

/*
Given the root of a Binary Search Tree and a target number k, return true if there exist two elements in the BST such that their sum is equal to the given target.

 

Example 1:


Input: root = [5,3,6,2,4,null,7], k = 9
Output: true
Example 2:


Input: root = [5,3,6,2,4,null,7], k = 28
Output: false
 

Constraints:

The number of nodes in the tree is in the range [1, 104].
-104 <= Node.val <= 104
root is guaranteed to be a valid binary search tree.
-105 <= k <= 105
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
  
    boolean ans=false;
    public void findTarget(TreeNode root, HashSet<Integer> past, int k){
      
      if(past.contains(k-root.val)){
        ans=true;
        return;
      }
      
      past.add(root.val);
      if(root.left!=null)
      findTarget(root.left, past, k);
      if(root.right!=null)
      findTarget(root.right, past, k);
      
    }
  
    public boolean findTarget(TreeNode root, int k) {
      if(root==null)
        return false;
      HashSet<Integer> past = new HashSet<>();
       findTarget(root, past, k);
      return ans;
      
    }
}
